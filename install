#!/usr/bin/env bash

if [ "$1" == "start" ]; then
    sudo docker-compose start
fi

if [ "$1" == "stop" ]; then
    sudo docker-compose stop
fi

if [ "$1" == "update" ]; then    
    sudo docker-compose pull && sudo docker-compose up -d && sudo docker image prune -f
fi

if [ "$1" == "setup" ]; then
  echo 'Setting system...' \
  && read -p "How many nodes do you want to run? (ex. 8, 10, 12, 15 ) : " NODE
  read -p "Do you want to apply automatic cashout? (ex. y or n ) : " CASHOUT \
  && sudo rm -rf swarm; git clone https://github.com/woosungchoi/swarm swarm \
  && cd swarm \
  && if [ "$NODE" == "8" ]; then
        cp 8/docker-compose.yaml .
        elif [ "$NODE" == "10" ]; then
        cp 10/docker-compose.yaml .
        elif [ "$NODE" == "12" ]; then
        cp 12/docker-compose.yaml .
        else
        cp 15/docker-compose.yaml .
     fi
  sed -i "s/IPì£¼ì†Œ/"$(curl -s icanhazip.com)"/g" docker-compose.yaml \
  && echo 'Setting timezone to Asia/Seoul...' \
  && sudo timedatectl set-timezone Asia/Seoul \
  && echo 'Installing Docker...' \
  && sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y \
  && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - \
  && sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" -y \
  && sudo apt update -y \
  && sudo apt install docker-ce docker-ce-cli containerd.io -y \
  && if [ ! -f /usr/local/bin/docker-compose ] ; then
        echo 'Installing Docker Compose...' \
        && COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4) \
        && sudo curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
        && sudo chmod +x /usr/local/bin/docker-compose
        else echo 'Skip Installing Docker Compose'
     fi
  if [ "$NODE" == "8" ]; then
        mkdir -p clef/01 node/01 clef/02 node/02 clef/03 node/03 clef/04 node/04 clef/05 node/05 clef/06 node/06 clef/07 node/07 clef/08 node/08 \
        elif [ "$NODE" == "10" ]; then
        mkdir -p clef/01 node/01 clef/02 node/02 clef/03 node/03 clef/04 node/04 clef/05 node/05 clef/06 node/06 clef/07 node/07 clef/08 node/08 clef/09 node/09 clef/10 node/10 \
        elif [ "$NODE" == "12" ]; then
        mkdir -p clef/01 node/01 clef/02 node/02 clef/03 node/03 clef/04 node/04 clef/05 node/05 clef/06 node/06 clef/07 node/07 clef/08 node/08 clef/09 node/09 clef/10 node/10 clef/11 node/11 clef/12 node/12 \
        else
        mkdir -p clef/01 node/01 clef/02 node/02 clef/03 node/03 clef/04 node/04 clef/05 node/05 clef/06 node/06 clef/07 node/07 clef/08 node/08 clef/09 node/09 clef/10 node/10 clef/11 node/11 clef/12 node/12 clef/13 node/13 clef/14 node/14 clef/15 node/15 \
     fi
  chmod -R 777 clef node \
  && echo 'Starting Swarm...' \
  && if [ "$NODE" == "8" ]; then
        docker-compose up -d clef-1 clef-2 clef-3 clef-4  clef-5 clef-6 clef-7 clef-8 && docker-compose up -d node-1 node-2 node-3 node-4 node-5 node-6 node-7 node-8 \
        elif [ "$NODE" == "10" ]; then
        docker-compose up -d clef-1 clef-2 clef-3 clef-4  clef-5 clef-6 clef-7 clef-8 clef-9 clef-10 && docker-compose up -d node-1 node-2 node-3 node-4 node-5 node-6 node-7 node-8 node-9 node-10 \
        elif [ "$NODE" == "12" ]; then
        docker-compose up -d clef-1 clef-2 clef-3 clef-4  clef-5 clef-6 clef-7 clef-8 clef-9 clef-10 clef-11 clef-12 && docker-compose up -d node-1 node-2 node-3 node-4 node-5 node-6 node-7 node-8 node-9 node-10 node-11 node-12 \
        else
        docker-compose up -d clef-1 clef-2 clef-3 clef-4  clef-5 clef-6 clef-7 clef-8 clef-9 clef-10 clef-11 clef-12 clef-13 clef-14 clef-15 && docker-compose up -d node-1 node-2 node-3 node-4 node-5 node-6 node-7 node-8 node-9 node-10 node-11 node-12 node-13 node-14 node-15 \
     fi
  sudo chmod +x cashout.sh && && sudo chmod +x cashout2.sh && sudo chmod +x cashout3.sh && sudo chmod +x cashout4.sh && sudo chmod +x cashout5.sh && sudo chmod +x cashout6.sh && sudo chmod +x cashout7.sh && sudo chmod +x cashout8.sh && sudo chmod +x cashout9.sh && sudo chmod +x cashout10.sh && sudo chmod +x cashout11.sh && sudo chmod +x cashout12.sh && sudo chmod +x cashout13.sh && sudo chmod +x cashout14.sh && sudo chmod +x cashout15.sh \
  && sudo chmod +x cashoutcron8.sh && sudo chmod +x cashoutcron10.sh && sudo chmod +x cashoutcron12.sh && sudo chmod +x cashoutcron15.sh \
  && if [ "$CASHOUT" == "y" ] && [ $NODE == "8" ]; then
            && echo 'Preparing auto cashout' \
            && echo 'Configuring cron...' \
            && echo "30 6 * * * /root/swarm/cashoutcron8.sh >> /root/cashout.log 2>&1" >> mycron \
            && sudo crontab mycron; rm mycron \
        elif [ "$CASHOUT" == "y" ] && [ $NODE == "10" ]; then
            && echo 'Preparing auto cashout' \
            && echo 'Configuring cron...' \
            && echo "30 6 * * * /root/swarm/cashoutcron10.sh >> /root/cashout.log 2>&1" >> mycron \
            && sudo crontab mycron; rm mycron \
        elif [ "$CASHOUT" == "y" ] && [ $NODE == "12" ]; then
            && echo 'Preparing auto cashout' \
            && echo 'Configuring cron...' \
            && echo "30 6 * * * /root/swarm/cashoutcron12.sh >> /root/cashout.log 2>&1" >> mycron \
            && sudo crontab mycron; rm mycron \
        else
            && echo 'Preparing auto cashout' \
            && echo 'Configuring cron...' \
            && echo "30 6 * * * /root/swarm/cashoutcron15.sh >> /root/cashout.log 2>&1" >> mycron \
            && sudo crontab mycron; rm mycron \
     fi
  && echo 'Done! ðŸŽ‰' \
  && echo 'by Woosung Choi' \
  && echo 'Below is a list of containers.'\
  && sudo docker-compose ps \
fi
